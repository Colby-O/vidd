#ifndef __VIDD_COLORTABLES_HPP__
#define __VIDD_COLORTABLES_HPP__

constexpr Color color16Table[] = {
	Color(0, 0, 0),
	Color(200, 0, 0),
	Color(0, 200, 0),
	Color(200, 200, 0),
	Color(0, 0, 200),
	Color(200, 0, 200),
	Color(0, 200, 200),
	Color(200, 200, 200),
	Color(0, 0, 0),
	Color(255, 0, 0),
	Color(0, 255, 0),
	Color(255, 255, 0),
	Color(0, 0, 255),
	Color(255, 0, 255),
	Color(0, 255, 255),
	Color(255, 255, 255),
};

constexpr Color color256Table[] = {
	Color(0x00, 0x00, 0x00),
	Color(0x80, 0x00, 0x00),
	Color(0x00, 0x80, 0x00),
	Color(0x80, 0x80, 0x00),
	Color(0x00, 0x00, 0x80),
	Color(0x80, 0x00, 0x80),
	Color(0x00, 0x80, 0x80),
	Color(0xc0, 0xc0, 0xc0),
	Color(0x80, 0x80, 0x80),
	Color(0xff, 0x00, 0x00),
	Color(0x00, 0xff, 0x00),
	Color(0xff, 0xff, 0x00),
	Color(0x00, 0x00, 0xff),
	Color(0xff, 0x00, 0xff),
	Color(0x00, 0xff, 0xff),
	Color(0xff, 0xff, 0xff),
	Color(0x00, 0x00, 0x00),
	Color(0x00, 0x00, 0x5f),
	Color(0x00, 0x00, 0x87),
	Color(0x00, 0x00, 0xaf),
	Color(0x00, 0x00, 0xd7),
	Color(0x00, 0x00, 0xff),
	Color(0x00, 0x5f, 0x00),
	Color(0x00, 0x5f, 0x5f),
	Color(0x00, 0x5f, 0x87),
	Color(0x00, 0x5f, 0xaf),
	Color(0x00, 0x5f, 0xd7),
	Color(0x00, 0x5f, 0xff),
	Color(0x00, 0x87, 0x00),
	Color(0x00, 0x87, 0x5f),
	Color(0x00, 0x87, 0x87),
	Color(0x00, 0x87, 0xaf),
	Color(0x00, 0x87, 0xd7),
	Color(0x00, 0x87, 0xff),
	Color(0x00, 0xaf, 0x00),
	Color(0x00, 0xaf, 0x5f),
	Color(0x00, 0xaf, 0x87),
	Color(0x00, 0xaf, 0xaf),
	Color(0x00, 0xaf, 0xd7),
	Color(0x00, 0xaf, 0xff),
	Color(0x00, 0xd7, 0x00),
	Color(0x00, 0xd7, 0x5f),
	Color(0x00, 0xd7, 0x87),
	Color(0x00, 0xd7, 0xaf),
	Color(0x00, 0xd7, 0xd7),
	Color(0x00, 0xd7, 0xff),
	Color(0x00, 0xff, 0x00),
	Color(0x00, 0xff, 0x5f),
	Color(0x00, 0xff, 0x87),
	Color(0x00, 0xff, 0xaf),
	Color(0x00, 0xff, 0xd7),
	Color(0x00, 0xff, 0xff),
	Color(0x5f, 0x00, 0x00),
	Color(0x5f, 0x00, 0x5f),
	Color(0x5f, 0x00, 0x87),
	Color(0x5f, 0x00, 0xaf),
	Color(0x5f, 0x00, 0xd7),
	Color(0x5f, 0x00, 0xff),
	Color(0x5f, 0x5f, 0x00),
	Color(0x5f, 0x5f, 0x5f),
	Color(0x5f, 0x5f, 0x87),
	Color(0x5f, 0x5f, 0xaf),
	Color(0x5f, 0x5f, 0xd7),
	Color(0x5f, 0x5f, 0xff),
	Color(0x5f, 0x87, 0x00),
	Color(0x5f, 0x87, 0x5f),
	Color(0x5f, 0x87, 0x87),
	Color(0x5f, 0x87, 0xaf),
	Color(0x5f, 0x87, 0xd7),
	Color(0x5f, 0x87, 0xff),
	Color(0x5f, 0xaf, 0x00),
	Color(0x5f, 0xaf, 0x5f),
	Color(0x5f, 0xaf, 0x87),
	Color(0x5f, 0xaf, 0xaf),
	Color(0x5f, 0xaf, 0xd7),
	Color(0x5f, 0xaf, 0xff),
	Color(0x5f, 0xd7, 0x00),
	Color(0x5f, 0xd7, 0x5f),
	Color(0x5f, 0xd7, 0x87),
	Color(0x5f, 0xd7, 0xaf),
	Color(0x5f, 0xd7, 0xd7),
	Color(0x5f, 0xd7, 0xff),
	Color(0x5f, 0xff, 0x00),
	Color(0x5f, 0xff, 0x5f),
	Color(0x5f, 0xff, 0x87),
	Color(0x5f, 0xff, 0xaf),
	Color(0x5f, 0xff, 0xd7),
	Color(0x5f, 0xff, 0xff),
	Color(0x87, 0x00, 0x00),
	Color(0x87, 0x00, 0x5f),
	Color(0x87, 0x00, 0x87),
	Color(0x87, 0x00, 0xaf),
	Color(0x87, 0x00, 0xd7),
	Color(0x87, 0x00, 0xff),
	Color(0x87, 0x5f, 0x00),
	Color(0x87, 0x5f, 0x5f),
	Color(0x87, 0x5f, 0x87),
	Color(0x87, 0x5f, 0xaf),
	Color(0x87, 0x5f, 0xd7),
	Color(0x87, 0x5f, 0xff),
	Color(0x87, 0x87, 0x00),
	Color(0x87, 0x87, 0x5f),
	Color(0x87, 0x87, 0x87),
	Color(0x87, 0x87, 0xaf),
	Color(0x87, 0x87, 0xd7),
	Color(0x87, 0x87, 0xff),
	Color(0x87, 0xaf, 0x00),
	Color(0x87, 0xaf, 0x5f),
	Color(0x87, 0xaf, 0x87),
	Color(0x87, 0xaf, 0xaf),
	Color(0x87, 0xaf, 0xd7),
	Color(0x87, 0xaf, 0xff),
	Color(0x87, 0xd7, 0x00),
	Color(0x87, 0xd7, 0x5f),
	Color(0x87, 0xd7, 0x87),
	Color(0x87, 0xd7, 0xaf),
	Color(0x87, 0xd7, 0xd7),
	Color(0x87, 0xd7, 0xff),
	Color(0x87, 0xff, 0x00),
	Color(0x87, 0xff, 0x5f),
	Color(0x87, 0xff, 0x87),
	Color(0x87, 0xff, 0xaf),
	Color(0x87, 0xff, 0xd7),
	Color(0x87, 0xff, 0xff),
	Color(0xaf, 0x00, 0x00),
	Color(0xaf, 0x00, 0x5f),
	Color(0xaf, 0x00, 0x87),
	Color(0xaf, 0x00, 0xaf),
	Color(0xaf, 0x00, 0xd7),
	Color(0xaf, 0x00, 0xff),
	Color(0xaf, 0x5f, 0x00),
	Color(0xaf, 0x5f, 0x5f),
	Color(0xaf, 0x5f, 0x87),
	Color(0xaf, 0x5f, 0xaf),
	Color(0xaf, 0x5f, 0xd7),
	Color(0xaf, 0x5f, 0xff),
	Color(0xaf, 0x87, 0x00),
	Color(0xaf, 0x87, 0x5f),
	Color(0xaf, 0x87, 0x87),
	Color(0xaf, 0x87, 0xaf),
	Color(0xaf, 0x87, 0xd7),
	Color(0xaf, 0x87, 0xff),
	Color(0xaf, 0xaf, 0x00),
	Color(0xaf, 0xaf, 0x5f),
	Color(0xaf, 0xaf, 0x87),
	Color(0xaf, 0xaf, 0xaf),
	Color(0xaf, 0xaf, 0xd7),
	Color(0xaf, 0xaf, 0xff),
	Color(0xaf, 0xd7, 0x00),
	Color(0xaf, 0xd7, 0x5f),
	Color(0xaf, 0xd7, 0x87),
	Color(0xaf, 0xd7, 0xaf),
	Color(0xaf, 0xd7, 0xd7),
	Color(0xaf, 0xd7, 0xff),
	Color(0xaf, 0xff, 0x00),
	Color(0xaf, 0xff, 0x5f),
	Color(0xaf, 0xff, 0x87),
	Color(0xaf, 0xff, 0xaf),
	Color(0xaf, 0xff, 0xd7),
	Color(0xaf, 0xff, 0xff),
	Color(0xd7, 0x00, 0x00),
	Color(0xd7, 0x00, 0x5f),
	Color(0xd7, 0x00, 0x87),
	Color(0xd7, 0x00, 0xaf),
	Color(0xd7, 0x00, 0xd7),
	Color(0xd7, 0x00, 0xff),
	Color(0xd7, 0x5f, 0x00),
	Color(0xd7, 0x5f, 0x5f),
	Color(0xd7, 0x5f, 0x87),
	Color(0xd7, 0x5f, 0xaf),
	Color(0xd7, 0x5f, 0xd7),
	Color(0xd7, 0x5f, 0xff),
	Color(0xd7, 0x87, 0x00),
	Color(0xd7, 0x87, 0x5f),
	Color(0xd7, 0x87, 0x87),
	Color(0xd7, 0x87, 0xaf),
	Color(0xd7, 0x87, 0xd7),
	Color(0xd7, 0x87, 0xff),
	Color(0xd7, 0xaf, 0x00),
	Color(0xd7, 0xaf, 0x5f),
	Color(0xd7, 0xaf, 0x87),
	Color(0xd7, 0xaf, 0xaf),
	Color(0xd7, 0xaf, 0xd7),
	Color(0xd7, 0xaf, 0xff),
	Color(0xd7, 0xd7, 0x00),
	Color(0xd7, 0xd7, 0x5f),
	Color(0xd7, 0xd7, 0x87),
	Color(0xd7, 0xd7, 0xaf),
	Color(0xd7, 0xd7, 0xd7),
	Color(0xd7, 0xd7, 0xff),
	Color(0xd7, 0xff, 0x00),
	Color(0xd7, 0xff, 0x5f),
	Color(0xd7, 0xff, 0x87),
	Color(0xd7, 0xff, 0xaf),
	Color(0xd7, 0xff, 0xd7),
	Color(0xd7, 0xff, 0xff),
	Color(0xff, 0x00, 0x00),
	Color(0xff, 0x00, 0x5f),
	Color(0xff, 0x00, 0x87),
	Color(0xff, 0x00, 0xaf),
	Color(0xff, 0x00, 0xd7),
	Color(0xff, 0x00, 0xff),
	Color(0xff, 0x5f, 0x00),
	Color(0xff, 0x5f, 0x5f),
	Color(0xff, 0x5f, 0x87),
	Color(0xff, 0x5f, 0xaf),
	Color(0xff, 0x5f, 0xd7),
	Color(0xff, 0x5f, 0xff),
	Color(0xff, 0x87, 0x00),
	Color(0xff, 0x87, 0x5f),
	Color(0xff, 0x87, 0x87),
	Color(0xff, 0x87, 0xaf),
	Color(0xff, 0x87, 0xd7),
	Color(0xff, 0x87, 0xff),
	Color(0xff, 0xaf, 0x00),
	Color(0xff, 0xaf, 0x5f),
	Color(0xff, 0xaf, 0x87),
	Color(0xff, 0xaf, 0xaf),
	Color(0xff, 0xaf, 0xd7),
	Color(0xff, 0xaf, 0xff),
	Color(0xff, 0xd7, 0x00),
	Color(0xff, 0xd7, 0x5f),
	Color(0xff, 0xd7, 0x87),
	Color(0xff, 0xd7, 0xaf),
	Color(0xff, 0xd7, 0xd7),
	Color(0xff, 0xd7, 0xff),
	Color(0xff, 0xff, 0x00),
	Color(0xff, 0xff, 0x5f),
	Color(0xff, 0xff, 0x87),
	Color(0xff, 0xff, 0xaf),
	Color(0xff, 0xff, 0xd7),
	Color(0xff, 0xff, 0xff),
	Color(0x08, 0x08, 0x08),
	Color(0x12, 0x12, 0x12),
	Color(0x1c, 0x1c, 0x1c),
	Color(0x26, 0x26, 0x26),
	Color(0x30, 0x30, 0x30),
	Color(0x3a, 0x3a, 0x3a),
	Color(0x44, 0x44, 0x44),
	Color(0x4e, 0x4e, 0x4e),
	Color(0x58, 0x58, 0x58),
	Color(0x60, 0x60, 0x60),
	Color(0x66, 0x66, 0x66),
	Color(0x76, 0x76, 0x76),
	Color(0x80, 0x80, 0x80),
	Color(0x8a, 0x8a, 0x8a),
	Color(0x94, 0x94, 0x94),
	Color(0x9e, 0x9e, 0x9e),
	Color(0xa8, 0xa8, 0xa8),
	Color(0xb2, 0xb2, 0xb2),
	Color(0xbc, 0xbc, 0xbc),
	Color(0xc6, 0xc6, 0xc6),
	Color(0xd0, 0xd0, 0xd0),
	Color(0xda, 0xda, 0xda),
	Color(0xe4, 0xe4, 0xe4),
	Color(0xee, 0xee, 0xee),
};

#endif